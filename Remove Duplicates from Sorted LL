/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        /* Recursively: Taking O(N) memory cause of the stack space
        
        if(head==null||head.next==null)
        return head;
        if(head.val==head.next.val)
        return deleteDuplicates(head.next);
        else
        { head.next= deleteDuplicates(head.next);
        return head; }
        */
        
        /* Iteratively: just O(N) time 

        if(head==null||head.next==null)
        return head;
        ListNode curr= head;
        while(curr.next!=null){
            if(curr.val==curr.next.val)
                curr.next= curr.next.next;
            else
                curr = curr.next; }
        return head;   
        */  
    }
}
